/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as authSigninImport } from './routes/(auth)/signin'
import { Route as authLogoutImport } from './routes/(auth)/logout'
import { Route as AppCategoriesIndexImport } from './routes/_app/categories/index'
import { Route as AppYearMonthIndexImport } from './routes/_app/$yearMonth/index'
import { Route as AppYearMonthIdImport } from './routes/_app/$yearMonth/$id'
import { Route as AppCategoriesCategoryIdRemoveImport } from './routes/_app/categories/$categoryId/remove'
import { Route as AppCategoriesCategoryIdMergeImport } from './routes/_app/categories/$categoryId/merge'
import { Route as AppCategoriesCategoryIdEditImport } from './routes/_app/categories/$categoryId/edit'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const authSigninRoute = authSigninImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const authLogoutRoute = authLogoutImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const AppCategoriesIndexRoute = AppCategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppYearMonthIndexRoute = AppYearMonthIndexImport.update({
  id: '/$yearMonth/',
  path: '/$yearMonth/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppYearMonthIdRoute = AppYearMonthIdImport.update({
  id: '/$yearMonth/$id',
  path: '/$yearMonth/$id',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCategoriesCategoryIdRemoveRoute =
  AppCategoriesCategoryIdRemoveImport.update({
    id: '/categories/$categoryId/remove',
    path: '/categories/$categoryId/remove',
    getParentRoute: () => AppRouteRoute,
  } as any)

const AppCategoriesCategoryIdMergeRoute =
  AppCategoriesCategoryIdMergeImport.update({
    id: '/categories/$categoryId/merge',
    path: '/categories/$categoryId/merge',
    getParentRoute: () => AppRouteRoute,
  } as any)

const AppCategoriesCategoryIdEditRoute =
  AppCategoriesCategoryIdEditImport.update({
    id: '/categories/$categoryId/edit',
    path: '/categories/$categoryId/edit',
    getParentRoute: () => AppRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninImport
      parentRoute: typeof rootRoute
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/$yearMonth/$id': {
      id: '/_app/$yearMonth/$id'
      path: '/$yearMonth/$id'
      fullPath: '/$yearMonth/$id'
      preLoaderRoute: typeof AppYearMonthIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/$yearMonth/': {
      id: '/_app/$yearMonth/'
      path: '/$yearMonth'
      fullPath: '/$yearMonth'
      preLoaderRoute: typeof AppYearMonthIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/categories/': {
      id: '/_app/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AppCategoriesIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/categories/$categoryId/edit': {
      id: '/_app/categories/$categoryId/edit'
      path: '/categories/$categoryId/edit'
      fullPath: '/categories/$categoryId/edit'
      preLoaderRoute: typeof AppCategoriesCategoryIdEditImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/categories/$categoryId/merge': {
      id: '/_app/categories/$categoryId/merge'
      path: '/categories/$categoryId/merge'
      fullPath: '/categories/$categoryId/merge'
      preLoaderRoute: typeof AppCategoriesCategoryIdMergeImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/categories/$categoryId/remove': {
      id: '/_app/categories/$categoryId/remove'
      path: '/categories/$categoryId/remove'
      fullPath: '/categories/$categoryId/remove'
      preLoaderRoute: typeof AppCategoriesCategoryIdRemoveImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppYearMonthIdRoute: typeof AppYearMonthIdRoute
  AppYearMonthIndexRoute: typeof AppYearMonthIndexRoute
  AppCategoriesIndexRoute: typeof AppCategoriesIndexRoute
  AppCategoriesCategoryIdEditRoute: typeof AppCategoriesCategoryIdEditRoute
  AppCategoriesCategoryIdMergeRoute: typeof AppCategoriesCategoryIdMergeRoute
  AppCategoriesCategoryIdRemoveRoute: typeof AppCategoriesCategoryIdRemoveRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppYearMonthIdRoute: AppYearMonthIdRoute,
  AppYearMonthIndexRoute: AppYearMonthIndexRoute,
  AppCategoriesIndexRoute: AppCategoriesIndexRoute,
  AppCategoriesCategoryIdEditRoute: AppCategoriesCategoryIdEditRoute,
  AppCategoriesCategoryIdMergeRoute: AppCategoriesCategoryIdMergeRoute,
  AppCategoriesCategoryIdRemoveRoute: AppCategoriesCategoryIdRemoveRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/logout': typeof authLogoutRoute
  '/signin': typeof authSigninRoute
  '/': typeof AppIndexRoute
  '/$yearMonth/$id': typeof AppYearMonthIdRoute
  '/$yearMonth': typeof AppYearMonthIndexRoute
  '/categories': typeof AppCategoriesIndexRoute
  '/categories/$categoryId/edit': typeof AppCategoriesCategoryIdEditRoute
  '/categories/$categoryId/merge': typeof AppCategoriesCategoryIdMergeRoute
  '/categories/$categoryId/remove': typeof AppCategoriesCategoryIdRemoveRoute
}

export interface FileRoutesByTo {
  '/logout': typeof authLogoutRoute
  '/signin': typeof authSigninRoute
  '/': typeof AppIndexRoute
  '/$yearMonth/$id': typeof AppYearMonthIdRoute
  '/$yearMonth': typeof AppYearMonthIndexRoute
  '/categories': typeof AppCategoriesIndexRoute
  '/categories/$categoryId/edit': typeof AppCategoriesCategoryIdEditRoute
  '/categories/$categoryId/merge': typeof AppCategoriesCategoryIdMergeRoute
  '/categories/$categoryId/remove': typeof AppCategoriesCategoryIdRemoveRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/(auth)/logout': typeof authLogoutRoute
  '/(auth)/signin': typeof authSigninRoute
  '/_app/': typeof AppIndexRoute
  '/_app/$yearMonth/$id': typeof AppYearMonthIdRoute
  '/_app/$yearMonth/': typeof AppYearMonthIndexRoute
  '/_app/categories/': typeof AppCategoriesIndexRoute
  '/_app/categories/$categoryId/edit': typeof AppCategoriesCategoryIdEditRoute
  '/_app/categories/$categoryId/merge': typeof AppCategoriesCategoryIdMergeRoute
  '/_app/categories/$categoryId/remove': typeof AppCategoriesCategoryIdRemoveRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/logout'
    | '/signin'
    | '/'
    | '/$yearMonth/$id'
    | '/$yearMonth'
    | '/categories'
    | '/categories/$categoryId/edit'
    | '/categories/$categoryId/merge'
    | '/categories/$categoryId/remove'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/logout'
    | '/signin'
    | '/'
    | '/$yearMonth/$id'
    | '/$yearMonth'
    | '/categories'
    | '/categories/$categoryId/edit'
    | '/categories/$categoryId/merge'
    | '/categories/$categoryId/remove'
  id:
    | '__root__'
    | '/_app'
    | '/(auth)/logout'
    | '/(auth)/signin'
    | '/_app/'
    | '/_app/$yearMonth/$id'
    | '/_app/$yearMonth/'
    | '/_app/categories/'
    | '/_app/categories/$categoryId/edit'
    | '/_app/categories/$categoryId/merge'
    | '/_app/categories/$categoryId/remove'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  authLogoutRoute: typeof authLogoutRoute
  authSigninRoute: typeof authSigninRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  authLogoutRoute: authLogoutRoute,
  authSigninRoute: authSigninRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/(auth)/logout",
        "/(auth)/signin"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/",
        "/_app/$yearMonth/$id",
        "/_app/$yearMonth/",
        "/_app/categories/",
        "/_app/categories/$categoryId/edit",
        "/_app/categories/$categoryId/merge",
        "/_app/categories/$categoryId/remove"
      ]
    },
    "/(auth)/logout": {
      "filePath": "(auth)/logout.tsx"
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin.tsx"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/$yearMonth/$id": {
      "filePath": "_app/$yearMonth/$id.tsx",
      "parent": "/_app"
    },
    "/_app/$yearMonth/": {
      "filePath": "_app/$yearMonth/index.tsx",
      "parent": "/_app"
    },
    "/_app/categories/": {
      "filePath": "_app/categories/index.tsx",
      "parent": "/_app"
    },
    "/_app/categories/$categoryId/edit": {
      "filePath": "_app/categories/$categoryId/edit.tsx",
      "parent": "/_app"
    },
    "/_app/categories/$categoryId/merge": {
      "filePath": "_app/categories/$categoryId/merge.tsx",
      "parent": "/_app"
    },
    "/_app/categories/$categoryId/remove": {
      "filePath": "_app/categories/$categoryId/remove.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
