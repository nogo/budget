/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as authSigninRouteImport } from './routes/(auth)/signin'
import { Route as authLogoutRouteImport } from './routes/(auth)/logout'
import { Route as AppReviewRouteRouteImport } from './routes/_app/review/route'
import { Route as AppCategoriesRouteRouteImport } from './routes/_app/categories/route'
import { Route as AppReviewIndexRouteImport } from './routes/_app/review/index'
import { Route as AppCategoriesIndexRouteImport } from './routes/_app/categories/index'
import { Route as AppYearMonthIndexRouteImport } from './routes/_app/$yearMonth/index'
import { Route as AppYearMonthIdRouteImport } from './routes/_app/$yearMonth/$id'
import { Route as AppReviewYearIndexRouteImport } from './routes/_app/review/$year/index'
import { Route as AppReviewYearMonthRouteImport } from './routes/_app/review/$year/$month'
import { Route as AppCategoriesCategoryIdRemoveRouteImport } from './routes/_app/categories/$categoryId/remove'
import { Route as AppCategoriesCategoryIdMergeRouteImport } from './routes/_app/categories/$categoryId/merge'
import { Route as AppCategoriesCategoryIdEditRouteImport } from './routes/_app/categories/$categoryId/edit'

const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const authSigninRoute = authSigninRouteImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const authLogoutRoute = authLogoutRouteImport.update({
  id: '/(auth)/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AppReviewRouteRoute = AppReviewRouteRouteImport.update({
  id: '/review',
  path: '/review',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCategoriesRouteRoute = AppCategoriesRouteRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReviewIndexRoute = AppReviewIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppReviewRouteRoute,
} as any)
const AppCategoriesIndexRoute = AppCategoriesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppCategoriesRouteRoute,
} as any)
const AppYearMonthIndexRoute = AppYearMonthIndexRouteImport.update({
  id: '/$yearMonth/',
  path: '/$yearMonth/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppYearMonthIdRoute = AppYearMonthIdRouteImport.update({
  id: '/$yearMonth/$id',
  path: '/$yearMonth/$id',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppReviewYearIndexRoute = AppReviewYearIndexRouteImport.update({
  id: '/$year/',
  path: '/$year/',
  getParentRoute: () => AppReviewRouteRoute,
} as any)
const AppReviewYearMonthRoute = AppReviewYearMonthRouteImport.update({
  id: '/$year/$month',
  path: '/$year/$month',
  getParentRoute: () => AppReviewRouteRoute,
} as any)
const AppCategoriesCategoryIdRemoveRoute =
  AppCategoriesCategoryIdRemoveRouteImport.update({
    id: '/$categoryId/remove',
    path: '/$categoryId/remove',
    getParentRoute: () => AppCategoriesRouteRoute,
  } as any)
const AppCategoriesCategoryIdMergeRoute =
  AppCategoriesCategoryIdMergeRouteImport.update({
    id: '/$categoryId/merge',
    path: '/$categoryId/merge',
    getParentRoute: () => AppCategoriesRouteRoute,
  } as any)
const AppCategoriesCategoryIdEditRoute =
  AppCategoriesCategoryIdEditRouteImport.update({
    id: '/$categoryId/edit',
    path: '/$categoryId/edit',
    getParentRoute: () => AppCategoriesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/categories': typeof AppCategoriesRouteRouteWithChildren
  '/review': typeof AppReviewRouteRouteWithChildren
  '/logout': typeof authLogoutRoute
  '/signin': typeof authSigninRoute
  '/': typeof AppIndexRoute
  '/$yearMonth/$id': typeof AppYearMonthIdRoute
  '/$yearMonth': typeof AppYearMonthIndexRoute
  '/categories/': typeof AppCategoriesIndexRoute
  '/review/': typeof AppReviewIndexRoute
  '/categories/$categoryId/edit': typeof AppCategoriesCategoryIdEditRoute
  '/categories/$categoryId/merge': typeof AppCategoriesCategoryIdMergeRoute
  '/categories/$categoryId/remove': typeof AppCategoriesCategoryIdRemoveRoute
  '/review/$year/$month': typeof AppReviewYearMonthRoute
  '/review/$year': typeof AppReviewYearIndexRoute
}
export interface FileRoutesByTo {
  '/logout': typeof authLogoutRoute
  '/signin': typeof authSigninRoute
  '/': typeof AppIndexRoute
  '/$yearMonth/$id': typeof AppYearMonthIdRoute
  '/$yearMonth': typeof AppYearMonthIndexRoute
  '/categories': typeof AppCategoriesIndexRoute
  '/review': typeof AppReviewIndexRoute
  '/categories/$categoryId/edit': typeof AppCategoriesCategoryIdEditRoute
  '/categories/$categoryId/merge': typeof AppCategoriesCategoryIdMergeRoute
  '/categories/$categoryId/remove': typeof AppCategoriesCategoryIdRemoveRoute
  '/review/$year/$month': typeof AppReviewYearMonthRoute
  '/review/$year': typeof AppReviewYearIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/_app/categories': typeof AppCategoriesRouteRouteWithChildren
  '/_app/review': typeof AppReviewRouteRouteWithChildren
  '/(auth)/logout': typeof authLogoutRoute
  '/(auth)/signin': typeof authSigninRoute
  '/_app/': typeof AppIndexRoute
  '/_app/$yearMonth/$id': typeof AppYearMonthIdRoute
  '/_app/$yearMonth/': typeof AppYearMonthIndexRoute
  '/_app/categories/': typeof AppCategoriesIndexRoute
  '/_app/review/': typeof AppReviewIndexRoute
  '/_app/categories/$categoryId/edit': typeof AppCategoriesCategoryIdEditRoute
  '/_app/categories/$categoryId/merge': typeof AppCategoriesCategoryIdMergeRoute
  '/_app/categories/$categoryId/remove': typeof AppCategoriesCategoryIdRemoveRoute
  '/_app/review/$year/$month': typeof AppReviewYearMonthRoute
  '/_app/review/$year/': typeof AppReviewYearIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/categories'
    | '/review'
    | '/logout'
    | '/signin'
    | '/'
    | '/$yearMonth/$id'
    | '/$yearMonth'
    | '/categories/'
    | '/review/'
    | '/categories/$categoryId/edit'
    | '/categories/$categoryId/merge'
    | '/categories/$categoryId/remove'
    | '/review/$year/$month'
    | '/review/$year'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/logout'
    | '/signin'
    | '/'
    | '/$yearMonth/$id'
    | '/$yearMonth'
    | '/categories'
    | '/review'
    | '/categories/$categoryId/edit'
    | '/categories/$categoryId/merge'
    | '/categories/$categoryId/remove'
    | '/review/$year/$month'
    | '/review/$year'
  id:
    | '__root__'
    | '/_app'
    | '/_app/categories'
    | '/_app/review'
    | '/(auth)/logout'
    | '/(auth)/signin'
    | '/_app/'
    | '/_app/$yearMonth/$id'
    | '/_app/$yearMonth/'
    | '/_app/categories/'
    | '/_app/review/'
    | '/_app/categories/$categoryId/edit'
    | '/_app/categories/$categoryId/merge'
    | '/_app/categories/$categoryId/remove'
    | '/_app/review/$year/$month'
    | '/_app/review/$year/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  authLogoutRoute: typeof authLogoutRoute
  authSigninRoute: typeof authSigninRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/categories': {
      id: '/_app/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof AppCategoriesRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/review': {
      id: '/_app/review'
      path: '/review'
      fullPath: '/review'
      preLoaderRoute: typeof AppReviewRouteRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/(auth)/logout': {
      id: '/(auth)/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof authLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/$yearMonth/$id': {
      id: '/_app/$yearMonth/$id'
      path: '/$yearMonth/$id'
      fullPath: '/$yearMonth/$id'
      preLoaderRoute: typeof AppYearMonthIdRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/$yearMonth/': {
      id: '/_app/$yearMonth/'
      path: '/$yearMonth'
      fullPath: '/$yearMonth'
      preLoaderRoute: typeof AppYearMonthIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/categories/': {
      id: '/_app/categories/'
      path: '/'
      fullPath: '/categories/'
      preLoaderRoute: typeof AppCategoriesIndexRouteImport
      parentRoute: typeof AppCategoriesRouteRoute
    }
    '/_app/review/': {
      id: '/_app/review/'
      path: '/'
      fullPath: '/review/'
      preLoaderRoute: typeof AppReviewIndexRouteImport
      parentRoute: typeof AppReviewRouteRoute
    }
    '/_app/categories/$categoryId/edit': {
      id: '/_app/categories/$categoryId/edit'
      path: '/$categoryId/edit'
      fullPath: '/categories/$categoryId/edit'
      preLoaderRoute: typeof AppCategoriesCategoryIdEditRouteImport
      parentRoute: typeof AppCategoriesRouteRoute
    }
    '/_app/categories/$categoryId/merge': {
      id: '/_app/categories/$categoryId/merge'
      path: '/$categoryId/merge'
      fullPath: '/categories/$categoryId/merge'
      preLoaderRoute: typeof AppCategoriesCategoryIdMergeRouteImport
      parentRoute: typeof AppCategoriesRouteRoute
    }
    '/_app/categories/$categoryId/remove': {
      id: '/_app/categories/$categoryId/remove'
      path: '/$categoryId/remove'
      fullPath: '/categories/$categoryId/remove'
      preLoaderRoute: typeof AppCategoriesCategoryIdRemoveRouteImport
      parentRoute: typeof AppCategoriesRouteRoute
    }
    '/_app/review/$year/$month': {
      id: '/_app/review/$year/$month'
      path: '/$year/$month'
      fullPath: '/review/$year/$month'
      preLoaderRoute: typeof AppReviewYearMonthRouteImport
      parentRoute: typeof AppReviewRouteRoute
    }
    '/_app/review/$year/': {
      id: '/_app/review/$year/'
      path: '/$year'
      fullPath: '/review/$year'
      preLoaderRoute: typeof AppReviewYearIndexRouteImport
      parentRoute: typeof AppReviewRouteRoute
    }
  }
}

interface AppCategoriesRouteRouteChildren {
  AppCategoriesIndexRoute: typeof AppCategoriesIndexRoute
  AppCategoriesCategoryIdEditRoute: typeof AppCategoriesCategoryIdEditRoute
  AppCategoriesCategoryIdMergeRoute: typeof AppCategoriesCategoryIdMergeRoute
  AppCategoriesCategoryIdRemoveRoute: typeof AppCategoriesCategoryIdRemoveRoute
}

const AppCategoriesRouteRouteChildren: AppCategoriesRouteRouteChildren = {
  AppCategoriesIndexRoute: AppCategoriesIndexRoute,
  AppCategoriesCategoryIdEditRoute: AppCategoriesCategoryIdEditRoute,
  AppCategoriesCategoryIdMergeRoute: AppCategoriesCategoryIdMergeRoute,
  AppCategoriesCategoryIdRemoveRoute: AppCategoriesCategoryIdRemoveRoute,
}

const AppCategoriesRouteRouteWithChildren =
  AppCategoriesRouteRoute._addFileChildren(AppCategoriesRouteRouteChildren)

interface AppReviewRouteRouteChildren {
  AppReviewIndexRoute: typeof AppReviewIndexRoute
  AppReviewYearMonthRoute: typeof AppReviewYearMonthRoute
  AppReviewYearIndexRoute: typeof AppReviewYearIndexRoute
}

const AppReviewRouteRouteChildren: AppReviewRouteRouteChildren = {
  AppReviewIndexRoute: AppReviewIndexRoute,
  AppReviewYearMonthRoute: AppReviewYearMonthRoute,
  AppReviewYearIndexRoute: AppReviewYearIndexRoute,
}

const AppReviewRouteRouteWithChildren = AppReviewRouteRoute._addFileChildren(
  AppReviewRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppCategoriesRouteRoute: typeof AppCategoriesRouteRouteWithChildren
  AppReviewRouteRoute: typeof AppReviewRouteRouteWithChildren
  AppIndexRoute: typeof AppIndexRoute
  AppYearMonthIdRoute: typeof AppYearMonthIdRoute
  AppYearMonthIndexRoute: typeof AppYearMonthIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCategoriesRouteRoute: AppCategoriesRouteRouteWithChildren,
  AppReviewRouteRoute: AppReviewRouteRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppYearMonthIdRoute: AppYearMonthIdRoute,
  AppYearMonthIndexRoute: AppYearMonthIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  authLogoutRoute: authLogoutRoute,
  authSigninRoute: authSigninRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
